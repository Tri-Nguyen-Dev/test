
<template>
  <div class="main">
    <div class="header">
      <div class="header-left">
        <h1 class="header-title">Stock list</h1>
        <span class="header-info">1280 product found</span>
      </div>
      <div class="header-right">
        <div class="header-search">
          <img
            class="header-search-icon"
            :src="require('~/assets/icon/icon-search.svg')"
            alt=""
          />
          <input class="header-search-input" type="text" placeholder="Search" />
        </div>
        <div class="header-toggle-filter">
          <img :src="require('~/assets/icon/filter-icon.svg')" alt="" />
          <span>Filter</span>
        </div>
        <div class="header-add">
          <img :src="require('~/assets/icon/plus-icon.svg')" alt="" />
          <span>Add Items</span>
        </div>
      </div>
    </div>

    <div class="filter">
      <div class="filter-item filter-warehouse">
        <div class="filter-item-left">
          <img :src="require('~/assets/icon/icon-filter-delete.svg')" alt="" />
          <span>Warehouse</span>
        </div>
        <div class="filter-item-right">
          <b-form-select
            v-model="selectedSelect"
            :options="options"
          ></b-form-select>
        </div>
      </div>
      <div class="filter-item filter-category">Category</div>
      <div class="filter-item filter-code">Code</div>
      <div class="filter-item filter-status">Status</div>
    </div>

    <b-table
      :fields="fields"
      :items="items"
      ref="selectableTable"
      selectable
      class="table-borderless"
      @row-selected="onRowSelected"
      @row-clicked="myRowClickHandler"
      responsive
    >
      <template #cell()="data">
        <div>{{ data.value }}</div>
      </template>
      <template #head(selected)="data">
        <div>
          <b-form-checkbox
            v-model="allSelected"
            @change="handelSelectAllRows"
            :indeterminate="indeterminate"
          />
        </div>
      </template>
      <template #cell(selected)="{ rowSelected, item, index }">
        <div>
          <b-form-checkbox
            v-model="rowSelected"
            @change="handelSelectRow(rowSelected, index)"
          />
        </div>
      </template>

      <template #cell(action)="data">
        <div>
          <div class="table-action">
            <button class="table-edit">
              <svg
                width="15"
                height="15"
                viewBox="0 0 15 15"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M4.53025 13.7802L11.5 6.81047L8.1895 3.49997L1.21975 10.4697C1.1238 10.5658 1.05564 10.686 1.0225 10.8177L0.25 14.75L4.1815 13.9775C4.3135 13.9445 4.43425 13.8762 4.53025 13.7802ZM13.75 4.56047C14.0312 4.27918 14.1892 3.89772 14.1892 3.49997C14.1892 3.10222 14.0312 2.72076 13.75 2.43947L12.5605 1.24997C12.2792 0.968764 11.8977 0.810791 11.5 0.810791C11.1023 0.810791 10.7208 0.968764 10.4395 1.24997L9.25 2.43947L12.5605 5.74997L13.75 4.56047Z"
                  :fill="data.rowSelected ? '#486AE2' : '#151622'"
                />
              </svg>
            </button>
            <button class="table-delete">
              <svg
                width="18"
                height="18"
                viewBox="0 0 18 18"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M15.8023 3.9225C14.5948 3.8025 13.3873 3.7125 12.1723 3.645V3.6375L12.0073 2.6625C11.8948 1.9725 11.7298 0.9375 9.97477 0.9375H8.00977C6.26225 0.9375 6.09725 1.9275 5.97725 2.655L5.81975 3.615C5.12225 3.66 4.42475 3.705 3.72725 3.7725L2.19725 3.9225C1.88225 3.9525 1.65725 4.23 1.68725 4.5375C1.71725 4.845 1.98725 5.07 2.30225 5.04L3.83225 4.89C7.76227 4.5 11.7223 4.65 15.6973 5.0475C15.7198 5.0475 15.7348 5.0475 15.7573 5.0475C16.0423 5.0475 16.2898 4.83 16.3198 4.5375C16.3423 4.23 16.1173 3.9525 15.8023 3.9225Z"
                  :fill="data.rowSelected ? '#486AE2' : '#151622'"
                />
                <path
                  opacity="0.3991"
                  d="M14.4223 6.105C14.2423 5.9175 13.9948 5.8125 13.7398 5.8125H4.25981C4.00481 5.8125 3.74981 5.9175 3.57731 6.105C3.40481 6.2925 3.30731 6.5475 3.32231 6.81L3.78731 14.505C3.86981 15.645 3.97481 17.07 6.59231 17.07H11.4073C14.0248 17.07 14.1298 15.6525 14.2123 14.505L14.6773 6.8175C14.6923 6.5475 14.5948 6.2925 14.4223 6.105Z"
                  :fill="data.rowSelected ? '#486AE2' : '#151622'"
                />
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M7.18506 12.75C7.18506 12.4394 7.43689 12.1875 7.74757 12.1875H10.2451C10.5557 12.1875 10.8076 12.4394 10.8076 12.75C10.8076 13.0606 10.5557 13.3125 10.2451 13.3125H7.74757C7.43689 13.3125 7.18506 13.0606 7.18506 12.75Z"
                  :fill="data.rowSelected ? '#486AE2' : '#151622'"
                />
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M6.5625 9.75C6.5625 9.43935 6.81434 9.1875 7.125 9.1875H10.875C11.1856 9.1875 11.4375 9.43935 11.4375 9.75C11.4375 10.0606 11.1856 10.3125 10.875 10.3125H7.125C6.81434 10.3125 6.5625 10.0606 6.5625 9.75Z"
                  :fill="data.rowSelected ? '#486AE2' : '#151622'"
                />
              </svg>
            </button>
          </div>
        </div>
      </template>
    </b-table>

    <div class="table-footer">
      <div class="table-show">
        <img :src="require('~/assets/icon/footer-table.svg')" alt="" />
        <span>Showing 01 - 100 of 1280</span>
      </div>
      <div class="table-paginate">
        <b-pagination></b-pagination>
      </div>
    </div>
  </div>
</template>
<script lang="ts">
import { Component, Vue } from "nuxt-property-decorator";

@Component
class TablePage extends Vue {
  fields: object[] = [
    { key: "selected", label: "" },
    { key: "no", label: "No" },
    { key: "name", label: "Name", sortable: true },
    { key: "inventory_level", label: "Inventory Level", sortable: true },
    { key: "box_code", label: "Box code", sortable: true },
    { key: "warehouse", label: "Warehouse", sortable: true },
    { key: "code", label: "Code", sortable: true },
    { key: "category", label: "CaTEgory", sortable: true },
    { key: "sender", label: "Sender", sortable: true },
    { key: "status", label: "Status" },
    { key: "action", label: "Action" },
  ];

  items: any[] = [
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
    {
      no: 0,
      name: "name",
      inventory_level: "0",
      box_code: "box_code",
      warehouse: "warehouse",
      code: "code",
      category: "category",
      sender: "sender",
      status: "status",
      action: "action",
    },
  ];

  selectedSelect: any = "d";
  options: any = [
    { value: "d", text: "Please select an option" },
    { value: "a", text: "This is First option" },
    { value: "b", text: "Selected Option" },
    { value: "c", text: "This is an option with object value" },
  ];

  allSelected: boolean = false;
  indeterminate: boolean = false;

  selected: any[] = [];

  handelSelectAllRows() {
    if (this.indeterminate) {
      this.$refs.selectableTable.clearSelected();
    }
    if (this.allSelected) {
      this.$refs.selectableTable.selectAllRows();
    } else {
      this.$refs.selectableTable.clearSelected();
    }
  }

  handelSelectRow(rowSelected, index) {
    if (rowSelected) {
      this.$refs.selectableTable.selectRow(index);
    } else {
      this.$refs.selectableTable.unselectRow(index);
    }
  }

  onRowSelected(items) {
    if (items.length === this.items.length) {
      this.allSelected = true;
      this.indeterminate = true;
    } else if (items.length < this.items.length && items.length > 0) {
      this.indeterminate = true;
      this.allSelected = true;
    } else if (items.length === 0) {
      this.allSelected = false;
      this.indeterminate = false;
    }
    this.selected = items;
  }

  myRowClickHandler() {
    this.$router.push("/");
  }
}

export default TablePage;
</script>

<style lang="scss">
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700&display=swap");
body {
  font-family: "Open Sans", sans-serif;
  background: #f1f3f6;
}

.main {
  padding: 32px;
  margin-left: 270px;
}

table {
  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
  background-color: #fff;
}

table > thead > tr {
  background-color: #f9f9fc;
  height: 56px;
  border-radius: 4px 4px 0px 0px;
}

table > thead > tr > th {
  height: inherit;
  font-size: 12px;
  font-weight: 700;
  line-height: calc(24 / 12);
  color: #979aa4;
  letter-spacing: 1px;
  text-transform: uppercase;
  padding: 0 13px !important;
}

table > thead > tr > th:nth-child(4) > div {
  justify-content: flex-end;
}

table > thead > tr > th > div,
table > tbody > tr > td > div {
  height: 100%;
  display: flex !important;
  align-items: center;
}

table > tbody > tr {
  height: 66px;
}

table > tbody > tr > td {
  height: inherit;
  padding: 0 13px !important;
  color: #979aa4;
  font-size: 14px;
  font-weight: 400;
  line-height: calc(24 / 12);
}

table > tbody > tr > td:nth-child(4) > div {
  justify-content: flex-end;
}

table {
  border-collapse: separate;
  border-spacing: 0 4px;
}

table > tbody > tr.b-table-row-selected.table-active {
  td {
    border: solid 2px #486ae2;
    border-style: solid none;
    background-color: #f1f3ff !important;
  }

  td:first-child {
    border-left-style: solid;
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
  }
  td:last-child {
    border-right-style: solid;
    border-bottom-right-radius: 4px;
    border-top-right-radius: 4px;
  }
}

.table {
  &-action {
    display: flex;
    align-items: center;
    gap: 0 8px;
  }

  &-edit,
  &-delete {
    border: none;
    outline: none;
    background: #f1f3f6;
    border-radius: 4px;
    width: 34px;
    height: 34px;
  }

  &-footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  &-show {
    display: flex;
    gap: 0 19px;
    color: #d2d2e0;
    font-size: 12px;
    font-weight: 400;
    line-height: calc(24 / 12);
  }

  &-paginate {
    display: flex;
    align-items: center;

    ul {
      margin: 0;
    }
  }
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 31px;

  &-title {
    color: #151622;
    font-weight: 700;
    font-size: 30px;
    line-height: calc(38 / 30);
    margin: 0;
  }

  &-info {
    font-weight: 400;
    font-size: 12px;
    line-height: calc(24 / 12);
    color: #979aa4;
  }

  &-right {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0 16px;
  }

  &-search {
    display: flex;
    align-items: center;
    background: #ffffff;
    border-radius: 4px;
    width: 300px;
    padding-left: 18px;
    overflow: hidden;
  }

  &-search-icon {
    cursor: pointer;
  }

  &-search-input {
    padding: 12px 0;
    width: 100%;
    padding-left: 18px;
    outline: none;
    border: none;
  }

  &-search-input::placeholder {
    color: #d2d2e0;
    font-weight: 400;
    font-size: 14px;
    line-height: calc(24 / 14);
  }

  &-toggle-filter {
    padding: 12px 16px;
    background: #ffffff;
    border-radius: 4px;
    display: flex;
    align-items: center;
    gap: 0 19px;
    cursor: pointer;

    span {
      font-weight: 400;
      font-size: 14px;
      line-height: calc(24 / 14);
      color: #151622;
    }
  }

  &-add {
    display: flex;
    align-items: center;
    gap: 0 19px;
    background: #486ae2;
    border-radius: 4px;
    padding: 12px 32px 12px 20px;
    cursor: pointer;

    span {
      font-weight: 400;
      font-size: 14px;
      line-height: calc(24 / 14);
      color: #ffffff;
    }
  }
}

.filter {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  margin-bottom: 24px;
  grid-gap: 0 16px;

  &-item {
    padding: 12px 16px;
    border-radius: 4px;
    background: #ffffff;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  &-item-left {
    display: flex;
    align-items: center;
    gap: 0 17px;

    span {
      font-size: 14px;
      font-weight: 400;
      line-height: calc(24 / 14);
      color: #151622;
    }
  }

  &-item-right {
    select {
      text-align: end;
      border: none;
      outline: none;
      font-size: 12px;
      font-weight: 400;
      color: #151622;
      cursor: pointer;
    }

    select:focus {
      box-shadow: none;
    }
  }
}
</style>
